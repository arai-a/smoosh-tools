#!/usr/bin/env python3

import argparse
import os
import pathlib
import re
import subprocess
import sys

parser = argparse.ArgumentParser(
    description='Change jsparagus reference in mozilla-central',
    formatter_class=argparse.RawTextHelpFormatter)
subparsers = parser.add_subparsers(dest='command')
subparsers.add_parser('l',
                      help='Use local jsparagus clone\n(jsparagus directory next to m-c)')
official_parser = subparsers.add_parser('o',
                      help='Use official jsparagus')
official_parser.add_argument('REV', nargs='?',
                             help='Revision')
fork_parser = subparsers.add_parser('f',
                                    help='Use forked jsparagus branch')
fork_parser.add_argument('USER',
                         help='GitHub user name')
fork_parser.add_argument('BRANCH',
                         help='Branch to use')
args = parser.parse_args()


def modify_rev(line, rev):
    if not rev:
        return line

    return re.sub('rev = ".+"', 'rev = "{}"'.format(rev), line)


ORIG_DEP = 'jsparagus = { git = "https://github.com/mozilla-spidermonkey/jsparagus",'
OTHER_DEP = 'jsparagus ='

lines = []

if args.command == 'l':
    print('Using local jsparagus reference...')
elif args.command == 'o':
    print('Using official jsparagus reference...')
elif args.command == 'f':
    print('Using forked jsparagus reference...')

cargo_toml = os.path.join(os.getcwd(), 'js', 'src', 'frontend', 'smoosh', 'Cargo.toml')

if not os.path.exists(cargo_toml):
    print("Cargo.toml not found.", file=sys.stderr)
    print("Please run in mozilla-central toplevel directory.", file=sys.stderr)
    sys.exit(1)

if args.command == 'o':
    official_rev = args.REV
    if official_rev == '-':
        jsparagus_dir = pathlib.Path().parent.absolute().parent.joinpath('jsparagus')
        bin_dir = pathlib.Path(__file__).parent.absolute()
        cmd = [bin_dir.joinpath('get-ci-generated-head').absolute()]
        output = subprocess.run(cmd,
                                capture_output=True,
                                cwd=jsparagus_dir)
        sha = output.stdout.strip().decode('utf-8')
        official_rev = sha

found_orig = False
with open(cargo_toml, 'r') as f:
    for line in f:
        if line.startswith(ORIG_DEP):
            if args.command == 'o':
                line = modify_rev(line, official_rev)
                found_orig = True
            else:
                line = '# ' + line
        elif line.startswith('# ' + ORIG_DEP):
            if args.command == 'o':
                found_orig = True
                line = line[2:]
                line = modify_rev(line, official_rev)
        elif line.startswith(OTHER_DEP):
            continue
        lines.append(line)

if args.command == 'l':
    lines.append('jsparagus = { path = "../../../../../jsparagus/" }\n')
elif args.command == 'o':
    if not found_orig:
        print("Commented out official reference not found.", file=sys.stderr)
        sys.exit(1)
elif args.command == 'f':
    lines.append('jsparagus = {{ git = "https://github.com/{}/jsparagus", branch = "{}" }}\n'.format(args.USER, args.BRANCH))

content = ''.join(lines)
print(content)

with open(cargo_toml, 'w') as f:
    f.write(content)
